#ifndef	SECURITYFILEINFORMATION_H
#define	SECURITYFILEINFORMATION_H

#include <string>

using namespace std;

#define SECURITYTAG_INFOTYPE_MASK 0x80
#define SECURITYTAG_VEHICLEINFO_MASK 0x70
#define SECURITYTAG_DATATYPE_MASK 0x0F

#define SECURITYTAG_EOF 0xFF

#define SECURITYTAG_DATATYPE_VALUE_NAME 0x00
#define SECURITYTAG_DATATYPE_VALUE_ID 0x01
#define SECURITYTAG_DATATYPE_VALUE_KE 0x02
#define SECURITYTAG_DATATYPE_VALUE_KD 0x03

#define SECURITYTAG_VEHICLEINFO_MIN 0x00
#define SECURITYTAG_VEHICLEINFO_MAX 0x05
#define SECURITYTAG_VEHICLEINFO_SHIFT 0x04

#define SECURITYDATA_EOF_LENGTH 0;

#define SECURITYDATA_MAX_BUF_SIZE (sizeof(SecurityVehicleInfo) * SECURITYDATA_VEHICLE_NUM_MAX)

#define SECURITYDATA_USER_TID_RESERVED_LENGTH 6

#define SECURITYDATA_VEHICLEINFO_SETTAGNUM 4
/**
 * userInfo.secInfoファイル構造体.
 */
typedef struct {
	unsigned char name[SECURITYDATA_USER_NAME_LENGTH];
	unsigned char tid[SECURITYDATA_USER_TID_LENGTH];
	unsigned char tid_reserved[SECURITYDATA_USER_TID_RESERVED_LENGTH];
} SecurityUserInfo;

typedef struct {
	SecurityUserInfo user;
	SecurityVehicleInfo vehicle[SECURITYDATA_VEHICLE_NUM_MAX];
} SecurityDataManagerInfo;

#endif	//#ifndef	SECURITYFILEINFORMATION_H
